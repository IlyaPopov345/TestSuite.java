Index: src/main/java/Methods.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\nimport java.lang.IllegalArgumentException;\r\n\r\npublic class Methods {\r\n    public static void task1860(String x) {\r\n        System.out.println(\" Мы стремимся к \" + x);\r\n    }\r\n\r\n    public static void task4140(String x, String y) {\r\n        System.out.println(\" Меня зовут  \" + x + \",\" + x + y + \".\");\r\n    }\r\n\r\n    public static double task4411(double x) {\r\n        return x + 7;\r\n\r\n    }\r\n\r\n    public static void task4411_2(double x) {\r\n\r\n        x = x + 7;\r\n    }\r\n\r\n    public static void task4411_3(Double x) {\r\n\r\n        x = x + 7;\r\n    }\r\n\r\n\r\n    public static double task2790(double xDeg) {\r\n        double xRad = (xDeg * Math.PI / 180);\r\n        return Math.sqrt(1 - Math.sin(xRad) * Math.sin(xRad));\r\n    }\r\n\r\n    public static double task3946(int[] num) {\r\n\r\n        int sum = 0;\r\n        int x = 0;\r\n\r\n        for (int y = 0; y < num.length; y++) {\r\n            sum = (sum + y);\r\n        }\r\n        x = (sum / num.length);\r\n        return x;\r\n    }\r\n\r\n    public static double task5662(double a, double b, double c) {\r\n        double d = 0;\r\n        if (a == 0) {\r\n            System.out.println(\" Уравнение не является квадратным \");\r\n            return 0;\r\n        } else {\r\n            d = b * b - 4 * a * c;\r\n        }\r\n\r\n\r\n        if (d == 0) {\r\n            System.out.println(\"у уравнения один вещественный корень. \");\r\n        } else if (d < 0) {\r\n            System.out.println(\"у уравнения нет вещественных корней. \");\r\n        } else if (d > 0) {\r\n            System.out.println(\"у уравнения два вещественных корня. \");\r\n        }\r\n\r\n        return d;\r\n    }\r\n\r\n    public static long task3669(int a, int b) {\r\n        long p = 1;\r\n        if (a <= b) {\r\n            for (int y = a; y <= b; y++) {\r\n\r\n                p = p * y;\r\n            }\r\n        } else if (a >= b) {\r\n\r\n            for (int y = a; y >= b; y--) {\r\n\r\n                p = p * y;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    public static int task4283(String a, String[] mas) {\r\n\r\n        int c = 0;\r\n        int count = 0;\r\n        for (int y = 0; y < mas.length; y++) {\r\n            if (a.equals(mas[y])) {\r\n                if (c == 0) {\r\n\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public static double[] task6497(int[] mas) {\r\n\r\n\r\n        double sum = 0;\r\n        double x = 0;\r\n        double[] average = new double[mas.length];\r\n\r\n        for (int y = 0; y < mas.length; y++) {\r\n            sum = sum + mas[y];\r\n        }\r\n\r\n        x = ((sum) / mas.length);\r\n\r\n        for (int y = 0; y < mas.length; y++) {\r\n            average[y] = Math.abs(mas[y] - x);\r\n\r\n        }\r\n\r\n        return average;\r\n    }\r\n\r\n    public static void task2632(int cx, int cy, int r, String fill) {\r\n        System.out.println(\" <circle cx= \" + \"'\" + cx + \"'\" + \" cy= \" + \"'\" + cy + \"'\"\r\n                + \" r= \" + \"'\" + r + \"'\" + \" fill= \" + \"'\" + fill + \"'\");\r\n\r\n    }\r\n\r\n    public static void task7474(int a, int b, int c) {\r\n\r\n        System.out.println(\"Квадратное уравнение \" + a + \"*\" + \"x*x\" + \" + \" + b + \"*x\" + \" + \" + c + \" =  0\");\r\n        System.out.println(\"Его дискриминант вычисляется по формуле:\" + \" d = \" + b + \"*\" + b + \" - \" + \"4\" + \"*\" + a + \"*\" + c);\r\n\r\n    }\r\n\r\n    public static void task9774(double m, double[] mas) {\r\n        double x;\r\n\r\n        for (int i = 0; i < mas.length; i++) {\r\n\r\n            x = mas[i] * m;\r\n            mas[i] = x;\r\n        }\r\n    }\r\n\r\n    public static boolean task4847(int a, int b, int c) {\r\n        if (a < 0) {\r\n            System.out.println(\"Значение A должно быть неотрицательным\");\r\n            return false;\r\n        }\r\n        if (b < 0) {\r\n            System.out.println(\"Значение B должно быть неотрицательным\");\r\n            return false;\r\n        }\r\n        if (c < 0) {\r\n            System.out.println(\"Значение C должно быть неотрицательным\");\r\n            return false;\r\n        }\r\n\r\n        if (a == b) {\r\n\r\n            System.out.println(\"Треугольник является равнобедренным.\");\r\n            return true;\r\n        }\r\n        if (b == c) {\r\n            System.out.println(\"Треугольник является равнобедренным.\");\r\n            return true;\r\n        }\r\n        if (a == c) {\r\n            System.out.println(\"Треугольник является равнобедренным.\");\r\n            return true;\r\n        } else {\r\n\r\n            System.out.println(\"Треугольник не является равнобедренным.\");\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static void task9271(double[] mas) {\r\n        double min;\r\n        double sub = 0;\r\n\r\n        min = mas[0];\r\n\r\n        for (int y = 1; y < mas.length; y++) {\r\n            if (min > mas[y]) {\r\n                min = mas[y];\r\n            }\r\n        }\r\n        for (int n = 0; n < mas.length; n++) {\r\n            sub = mas[n] - min;\r\n            mas[n] = sub;\r\n\r\n            System.out.print(sub + \" \");\r\n        }\r\n        System.out.println();\r\n\r\n    }\r\n\r\n    public static double task1934(double a, double b) {\r\n        double result = 0;\r\n\r\n        if (b <= 0) {\r\n            result = a * Math.sqrt(-7 * b);\r\n            System.out.println(result);\r\n        } else {\r\n\r\n            IllegalArgumentException ex = new IllegalArgumentException(\"Подкоренное выражение должно быть неотрицательно\");\r\n            throw ex;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static double task3934(int x, int y) {\r\n        double result;\r\n\r\n        result = (-5 * Math.sqrt(x + Math.sqrt(y)));\r\n\r\n        if (Double.isNaN(result)) {\r\n            IllegalArgumentException ui = new IllegalArgumentException(\"Подкоренное выражение должно быть неотрицательно3\");\r\n            throw ui;\r\n\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n\r\n    public static double task9020(int x) {\r\n\r\n        double result;\r\n        result = 3 * Math.sqrt(61 - x);\r\n\r\n        if (Double.isNaN(result)) {\r\n            IllegalArgumentException ex = new IllegalArgumentException(\"Подкоренное выражение должно быть неотрицательно\");\r\n\r\n            throw ex;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    public static double task5871(int x) {\r\n        double result;\r\n        result = (Math.sqrt(x + 5) + Math.sqrt(x - 5)) / (2 * Math.sqrt(x));\r\n        if (Double.isNaN(result)) {\r\n            IllegalArgumentException ex = new IllegalArgumentException(\"Подкоренное выражение должно быть неотрицательно\");\r\n\r\n            throw ex;\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Methods.java b/src/main/java/Methods.java
--- a/src/main/java/Methods.java	(revision 36b6cdee526d397da296e97ecec30fca54628f9d)
+++ b/src/main/java/Methods.java	(date 1656904758265)
@@ -251,6 +251,11 @@
 
         return result;
     }
+
+    public static void task7891(int[] mas) {
+
+
+    }
 }
 
 
Index: src/main/java/task14test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/task14test.java b/src/main/java/task14test.java
new file mode 100644
--- /dev/null	(date 1656931173526)
+++ b/src/main/java/task14test.java	(date 1656931173526)
@@ -0,0 +1,24 @@
+import java.util.Scanner;
+
+public class task14test {
+
+
+    public static void main(String[] args) {
+        Scanner s = new Scanner(System.in);
+        String a = s.nextLine();
+        String[] arr = a.split(",");
+        int[] num = new int[arr.length];
+        int sum = 0;
+        for (int i = 0; i < num.length; i++) {
+            num[i] = Integer.parseInt(arr[i]);
+        }
+        sum = num[0] + num[1];
+        System.out.print(sum);
+      /*  for (int y = 0; y < mas.length; y++) {
+          mas[sum]= num[y];
+          System.out.print(mas.length);}
+*/
+
+    }
+}
+
